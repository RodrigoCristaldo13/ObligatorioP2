@using Dominio;

@model IEnumerable<Dominio.Publicacion>

@{
    ViewData["Title"] = "Buscar";
}
<div class=" row justify-content-center align-content-center">
    <h2 class="text-center">Buscador de Publicaciones</h2>

    <div class="col-md-6">
        <form method="post">
            <div class="form-group">
                <input type="text" class="form-control mt-3" name="buscar" placeholder="Ingrese un texto" required />
            </div>
            <div class="form-group">
                <input type="number" class="form-control mt-3" name="numero" placeholder="Valor Aceptación" required />
            </div>
            <input type="submit" value="Buscar" class="btn btn-primary btn-block mt-3" />
        </form>
    </div>
    @if (TempData["error"] != null)
    {
        <div class="alert-danger">
            <p>@TempData["error"]</p>
        </div>
    }
</div>

<hr />

@if (Model != null && Model.Count() != 0)
{
    <section class="container mt-4 col-md-8">
        <h5 class="text-center">Se muestran las Publicaciones con un Valor de Aceptación superior al ingresado y que contengan ese texto</h5>

        @foreach (Publicacion p in Model)
        {
            <hr />
            <article class="card">
                <div class="card-header">
                    <h4 class="card-title">@p.Titulo</h4>
                    <p title="@p.FechaPublicacion">@p.TiempoTranscurrido()</p>
                    <div class="d-flex justify-content-between">
                        <h6 title="Valor de Aceptación">VA: @p.CalcularValorAceptacion()</h6>

                        @if (p.Privado)
                        {
                            <p title="Solo los Amigos de @p.Autor.Nombre pueden ver este posteo">@p.GetTipo() Privado</p>
                        }
                        else
                        {
                            <p title="Cualquier Usuario que tenga una cuenta puede ver este posteo">@p.GetTipo() Público</p>
                        }

                    </div>
                </div>
                <div class="card-body">
                    <h6 class="card-subtitle mb-2 text-muted">@p.Autor.Nombre @p.Autor.Apellido</h6>
                    <p class="card-text">@p.Texto</p>
                    @if (p.GetTipo() == "Post" && p is Post po)
                    {
                        <img src="@po.Imagen" class="card-img-top" alt="@po.Imagen">
                    }
                </div>
                <div class="card-footer">

                    <div class="row d-flex align-items-center justify-content-between">
                        @* MOSTRAMOS REACCIONES Y COMENTARIOS? *@
                        @*
                @if (Context.Session.GetString("tipoUsuarioLogueado") == "Miembro")
                {
                @if (TempData["bloqueado"] == "Bloqueado")
                {
                <div class="mt-3">
                <h6 class="msg alert-danger text-center">Usted no puede reaccionar a las publicaciones, está bloqueado!</h6>
                </div>
                }
                else
                {
                @if (p.GetTipo() == "Post" && p is Post post)
                {
                <div class="col-md-2 text-center">
                @Html.ActionLink("Like", "Create", "Publicacion", new{idPublicacion=@post.Id, reaccion="like"}, new { @class = "btn btn-outline-success btn-sm " })
                </div>

                <div class="col-md-2 text-center">
                @Html.ActionLink("Dislike", "Create", "Publicacion", new{idPublicacion=@post.Id, reaccion="dislike"}, new { @class = "btn btn-outline-danger btn-sm " })
                </div>
                }
                else
                {
                <div class="col-md-3 text-center">
                @Html.ActionLink("Like", "Create", "Publicacion", new{idPublicacion=@p.Id, reaccion="like"}, new { @class = "btn btn-outline-success btn-sm " })
                </div>

                <div class="col-md-3 text-center">
                @Html.ActionLink("Dislike", "Create", "Publicacion", new{idPublicacion=@p.Id, reaccion="dislike"}, new { @class = "btn btn-outline-danger btn-sm " })
                </div>
                }
                }
                }
                @if (p.GetTipo() == "Post" && p is Post pos)
                {
                <div class="col-md-4 text-center">
                @Html.ActionLink("Comentarios", "Details", "Publicacion", new{idPost=@pos.Id}, new { @class = "btn btn-outline-secondary btn-sm" })

                </div>
                } *@
                        <span class="text-center text-black-50">@p.GetReaccionesTipo("like") like | @p.GetReaccionesTipo("dislike") dislike</span>
                    </div>
                </div>
            </article>
        }
    </section>

}
else
{
    <p class="text-center">No hay publicaciones para mostrar</p>
}

<div class="mt-3">
    @Html.ActionLink("Atrás", "Index", "Home", null, new { @class = "btn btn-outline-secondary btn-sm"})
</div>

